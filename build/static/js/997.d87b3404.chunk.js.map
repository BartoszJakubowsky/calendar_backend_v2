{"version":3,"file":"static/js/997.d87b3404.chunk.js","mappings":"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","sources":["components/ui/Close.js","hooks/useSlots.js","pages/Calendar/MonthNavbar.jsx","pages/Calendar/DayColumnHeader.jsx","pages/Calendar/DaySlot.jsx","pages/Calendar/CalendarColumnMessageSlot.jsx","pages/Calendar/DayColumn.jsx","pages/Calendar/Time.jsx","pages/Calendar/Week.jsx","pages/Calendar/Month.jsx","pages/Calendar/MonthCarosuel.jsx","pages/Calendar/AdminSettings/SelectGroups.jsx","pages/Calendar/AdminSettings/SelectTimes.jsx","pages/Calendar/AdminSettings/AddCalendarMessageSettings.jsx","pages/Calendar/AdminSettings/MenageCalendarMessageSettings.jsx","pages/Calendar/AdminSettings/CalendarMessageSettings.jsx","pages/Calendar/CalendarPage.js"],"sourcesContent":["\r\nimport {HiOutlineX as CloseSlotSettingsIcon} from 'react-icons/hi';\r\nimport classNames from 'classnames';\r\n\r\nexport default function Close({onClick, ...rest}) \r\n{\r\n\r\n    const closeClassName = classNames(\"bg-red-400 absolute top-0 right-0 cursor-pointer hover:bg-red-500 duration-150 hover:text-lg\",\r\n    rest.className)\r\n\r\n\r\n    return (\r\n        <CloseSlotSettingsIcon \r\n            className={closeClassName}\r\n            onClick={onClick}\r\n            {...rest}\r\n        />\r\n    )\r\n}\r\n","import { useContext } from \"react\";\r\nimport SlotContext from \"../context/slots\";\r\n\r\nfunction useSlots()\r\n{\r\n    return useContext(SlotContext);\r\n}\r\n\r\nexport default useSlots;\r\n\r\n\r\n\r\n","import classNames from \"classnames\";\r\n\r\nexport default function MonthNavbar({displayedMonth,setDisplayedMonth, monthsCountForMonthCarousel}) \r\n{\r\n\r\n    const handleShowPrevMonthClick = () => {\r\n        setDisplayedMonth((displayedMonth - 1 + monthsCountForMonthCarousel) % monthsCountForMonthCarousel);\r\n      };\r\n    \r\n    const handleShowNextMonthClick = () => {\r\n        setDisplayedMonth((displayedMonth + 1) % monthsCountForMonthCarousel);\r\n      };\r\n\r\n    return (\r\n        <div className=\"bg-zinc-300 w-full h-10 flex justify-start sticky top-0 z-10 font-semibold\">\r\n        <button\r\n          className={classNames(\r\n              \"py-2 px-4  text-white md:w-fit w-full \",\r\n              displayedMonth === 0 ? \"bg-gray-500 cursor-default\" : \"bg-purple-400 hover:bg-purple-500 cursor-pointer\"\r\n          )}\r\n          onClick={handleShowPrevMonthClick}\r\n          disabled={displayedMonth === 0}\r\n          >\r\n          Poprzedni miesiąc\r\n          </button>\r\n          <button\r\n          className={classNames(\r\n              \"py-2 px-4 md:rounded-r-md text-white md:w-fit w-full\",\r\n              displayedMonth === monthsCountForMonthCarousel - 1 ? \"bg-gray-500 cursor-default\" : \"bg-purple-400 hover:bg-purple-500 cursor-pointer\"\r\n          )}\r\n          onClick={handleShowNextMonthClick}\r\n          disabled={displayedMonth === monthsCountForMonthCarousel - 1}\r\n          >\r\n          Następny miesiąc\r\n          </button>\r\n          </div>\r\n    )    \r\n}","import {useRef} from 'react';\r\nimport useAuthentication from '../../hooks/useAuthentication';\r\n\r\nexport default function DayColumnHeader({dayDate, day, slots, isBlank, slotMessage, setSlotMessage, timeArr, calendar}) \r\n{\r\n\r\n    const {isAdmin} = useAuthentication();\r\n\r\n    const adminSettingsRef = useRef(null);\r\n    let pressTimer = null;\r\n  \r\n    const handleMouseDown = () => {\r\n    \r\n        if (!isAdmin || isBlank)\r\n            return;\r\n    \r\n      pressTimer = setTimeout(() => {\r\n        setSlotMessage({ dayDate, timeArr})\r\n      }, 1000);\r\n    };\r\n  \r\n    const handleMouseUp = event => {\r\n        event.preventDefault();\r\n      clearTimeout(pressTimer);\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={`h-20 min-w-[10rem] w-full flex-none border-b-2 border-black ${isBlank? 'bg-gray-300' :  'bg-purple-100'} flex flex-col z-[2] sticky top-0 select-none cursor-pointer`}\r\n                ref={adminSettingsRef}\r\n                onMouseDown={handleMouseDown}\r\n                onMouseUp={handleMouseUp}\r\n                onTouchStart={handleMouseDown}\r\n                onTouchEnd={handleMouseUp}\r\n        >\r\n\r\n                {/* day and date */}\r\n                <div className='flex flex-col  justify-center items-center'>\r\n                    <span className='font-semibold'>{day}</span>\r\n                    <span>{dayDate}</span>\r\n                </div>\r\n                {isBlank? false : <div className='flex flex-row w-full h-full overflow-hidden'>\r\n                {/* slots name holder */}\r\n                {slots.map((slot, index) => {\r\n                    return (\r\n\r\n                        <span key={index} className=\"w-full h-full justify-center items-center overflow-hidden flex flex-wrap text-center border-[1px] border-t-black border-t-[3px] break-words border-gray-400\">{slot.name}</span>\r\n                    );\r\n                })}\r\n                </div>}\r\n            </div>  \r\n    )\r\n}","import {useEffect, useMemo, useState } from \"react\";\r\nimport { useTransition, animated} from 'react-spring';\r\nimport useSlots from '../../hooks/useSlots';\r\nimport useCalendars from \"../../hooks/useCalendars\";\r\nimport { calcLength } from \"framer-motion\";\r\nimport useAuthentication from \"../../hooks/useAuthentication\";\r\n\r\nexport default function DaySlot({_thisSlot, dayDate}) \r\n{\r\n\r\n\r\n  const {updateSlot, updateSlotsArray, emitMessage} = useSlots();\r\n  const [thisSlot, setThisSlot] = useState(_thisSlot);\r\n  const {user} = useAuthentication();\r\n  const {setMessage} = useCalendars();\r\n  useMemo(()=>\r\n  {\r\n    _thisSlot.handleSign = setThisSlot;\r\n    updateSlotsArray([_thisSlot]);\r\n  },[])\r\n\r\n    const {setConfirm} = useCalendars();\r\n    const sign = thisSlot.sign;\r\n    // const thisSlot = \r\n    // {\r\n    //     calendar : calendarName,\r\n    //     date,\r\n    //     weekIndex,\r\n    //     day : dayName,\r\n    //     time,\r\n    //     slotName,\r\n    //     slotIndex,\r\n    //     handleSign: handleSign,\r\n    //     sign:,\r\n    // };\r\n\r\nconst handleClick = event =>\r\n{\r\n    event.preventDefault();\r\n\r\n    //unsign\r\n    if (sign === user.name)\r\n    {\r\n        const message = `Czy na pewno chcesz wypisać się z dnia ${thisSlot.day.toLowerCase()} ${dayDate}, godzina ${thisSlot.time}?`\r\n        const submit = \"Wypisz mnie\"    \r\n        setConfirm({message : message, submit : submit, handleSubmit : handleUnsignClick})\r\n        // handleUnsignClick(true);\r\n\r\n    }\r\n    //sign\r\n    else\r\n    {\r\n        const message = `Czy na pewno chcesz zapisać się na ${thisSlot.time} w ${thisSlot.day.toLowerCase()} ${dayDate}?`\r\n        const submit = \"Zapisz mnie\"\r\n        setConfirm({message : message, submit : submit, handleSubmit : handleSignClick})\r\n        // handleSignClick(true);\r\n\r\n    }\r\n}\r\n\r\nconst handleSignClick = (confirmed) =>\r\n{\r\n\r\n    if (!confirmed)\r\n        return\r\n\r\n    const newSlot = {...thisSlot, sign: user.name}\r\n    handleSign(newSlot);\r\n}\r\n\r\nconst handleUnsignClick = (confirmed) =>\r\n{\r\n    if (!confirmed)\r\n        return\r\n\r\n        const newSlot = {...thisSlot, sign: ''}\r\n        handleSign(newSlot);\r\n        setMessage('Zostałeś wypisany!')\r\n}\r\n\r\nconst handleSign = newSlot =>\r\n{\r\n      emitMessage(newSlot);\r\n      setMessage('Zostałeś zapisany!')\r\n      setThisSlot(newSlot);\r\n\r\n\r\n        // setSign(newSlot.sign);\r\n}\r\n\r\nconst duration = 300;\r\nconst defaultStyle = {\r\n  opacity: 0,\r\n  transform: 'translateX(-50%)',\r\n  display: 'inline-block',\r\n};\r\nconst transitionStyles = {\r\n  entering: { opacity: 1, transform: 'translateX(0)' },\r\n  entered: { opacity: 1, transform: 'translateX(0)' },\r\n  exiting: { opacity: 0, transform: 'translateX(-50%)' },\r\n  exited: { opacity: 0, transform: 'translateX(-50%)' },\r\n};\r\n\r\n  const transitions = useTransition(sign !== '', {\r\n    from: defaultStyle,\r\n    enter: transitionStyles.entering,\r\n    leave: transitionStyles.exiting,\r\n    config: {\r\n      duration,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <button\r\n      className={`overflow-hidden w-full h-full border-[1px] border-gray-400 duration-150 hover:backdrop-brightness-90 text-center active:bg-zinc-200\r\n        ${sign === '' ? '' : ''}\r\n        ${sign !== user.name && sign !== '' ? 'cursor-not-allowed pointer-events-none' : ''}\r\n      `}\r\n      onClick={handleClick}\r\n    >\r\n      {transitions((style, item) =>\r\n        item && (\r\n          <animated.span style={style}>\r\n            {sign}\r\n          </animated.span>\r\n        )\r\n      )}\r\n    </button>\r\n  );\r\n\r\n}\r\n\r\n// const tempCalendar = \r\n// {\r\n//     name: 'Środa Wielkopolska', \r\n//     date: ['KWIECIEŃ.2023', 'MAJ.2023', 'CZERWIEC.2023', 'LIPIEC.2023'], \r\n//     time: {timeFrom: '08:00', timeTo: '16:00', timeSpace: '01:00'}, \r\n//     slots: \r\n//     [\r\n//         {name: 'Oficjalne', space: '2', order: 1},\r\n//         {name: 'Nieoficjalne', space: '2', order: '2'}\r\n//     ]\r\n// }\r\n\r\n// const tempSigned = \r\n// {\r\n//     calendarName : name,\r\n//     month: date,\r\n//     day: thisDay,\r\n//     time: thisTime,\r\n//     slotName: slot.name,\r\n//     slotSpace: slot.space.slotSpace\r\n// }\r\n// slot = [name, order, space]\r\n// // const [slots, setSlots] = \r\n\r\n\r\n\r\n","\r\nexport default function CalendarColumnMessageSlot({slotMessage, time}) \r\n{\r\n\r\n\r\n    const {thisSlotMessage : message,  selectedGroups : groups, dayDate : date} = slotMessage;\r\n\r\n\r\n    return(\r\n        <div className=\"w-full h-full absolute z-[1] bg-red-300 border-[1px] border-gray-400 flex justify-center items-center break-words cursor-default \">\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n};\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport useSlots from '../../hooks/useSlots';\r\nimport DayColumnHeader from './DayColumnHeader';\r\nimport DaySlot from './DaySlot';\r\nimport CalendarColumnMessageSlot from './CalendarColumnMessageSlot';\r\nimport classNames from 'classnames';\r\n\r\nexport default function DayColumn({day, isActive, isBlank, timeArr, date, weekIndex, dayDate, calendar, heigh,  slotMessage, setSlotMessage,...rest}) \r\n{\r\n    const {_id, name, slots, records, slotMessages} = calendar\r\n    const {handleRecords} = useSlots();\r\n    const calendarID = _id;\r\n\r\n    \r\n\r\n\r\n\r\n    //format dd.mm.yyyy\r\n    const convertDate = (dayDate) =>\r\n    {\r\n        const data = dayDate\r\n        const _day = data.getDate().toString().padStart(2, \"0\");\r\n        const _month = (data.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const _year = data.getFullYear().toString();\r\n        return `${_day}.${_month}.${_year}`;\r\n    }\r\n\r\n    const {removeAllSlots} = useSlots();\r\n    \r\n    useEffect(()=>\r\n    {\r\n\r\n        handleRecords(records);\r\n\r\n        return ()=>\r\n        {\r\n            removeAllSlots();\r\n        }\r\n    },[])\r\n\r\n    if (calendar.bannedDays.includes(day.toUpperCase()))\r\n        return false;\r\n\r\n    let _dayDate;\r\n\r\n    if (dayDate)\r\n        _dayDate = convertDate(dayDate);\r\n\r\n    const filteredMessages = slotMessages.filter(message => message.dayDate === _dayDate);\r\n\r\n    \r\n    \r\n    const daySlots = ()=>\r\n    {   \r\n        if (isBlank)\r\n            return false;\r\n            // return (\r\n            //     <div className={`flex w-full h-full bg-red-200`}>\r\n            //      </div>\r\n            // )\r\n        return (\r\n            <>\r\n            {timeArr.map((time, index) =>\r\n            {   \r\n                const slotMessage = filteredMessages.find(message => message.selectedTimes.includes(time));\r\n\r\n                let showSlotMessage = false;\r\n                if (slotMessage)\r\n                {\r\n                    const key = slotMessages.thisSlotMessage + time;\r\n                    showSlotMessage =  <CalendarColumnMessageSlot key={key} slotMessage={slotMessage} time={time}/>\r\n\r\n                }\r\n\r\n\r\n                //cell day\r\n                return (\r\n                <div\r\n                    key={index} \r\n                    className={`relative flex flex-row w-full h-full border-black`}>\r\n                        {showSlotMessage}\r\n                        {/* slots in cells / slots holder */}\r\n                        {slots.map(slot =>\r\n                        {   \r\n                            let spaces = [];\r\n\r\n                            // if (showSlotMessage)\r\n                            // spaces.push(showSlotMessage)\r\n\r\n                            for (let i = 0; i < slot.space; i++) \r\n                            {\r\n                                const key = name + day+ slot.name + time + i;\r\n\r\n                                const thisSlot = \r\n                                {\r\n                                    calendar : name,\r\n                                    date,\r\n                                    weekIndex,\r\n                                    day,\r\n                                    time,\r\n                                    slotName : slot.name,\r\n                                    slotIndex : i,\r\n                                    sign: '',\r\n                                    calendarID,\r\n                                    fullDate: _dayDate,\r\n                                };\r\n                                spaces.push(\r\n                                   <DaySlot \r\n                                    key={key}\r\n                                    dayDate={_dayDate}\r\n                                    _thisSlot={thisSlot}\r\n                                    />\r\n                                )\r\n                            }\r\n\r\n                        //slot holder -> day\r\n                        const slotHolderClassName = classNames(`relative flex flex-col w-full md:h-full order-${slot.order} overflow-hidden ${heigh.toString()}`)\r\n                        return <div key={slot.name} className={slotHolderClassName}>\r\n                                {spaces}\r\n                                </div>\r\n                           \r\n                        })}\r\n                </div>)\r\n            })}\r\n            </>\r\n\r\n        )\r\n    };\r\n\r\n    return (\r\n        //column\r\n        <div className={`flex flex-col w-full h-fit md:h-full ${isBlank? ' ' : 'bg-zinc-100'}  border-l-[2px] border-black `}  key={day}>\r\n            <DayColumnHeader dayDate={_dayDate} timeArr={timeArr} day={day} slots={slots} isBlank={isBlank}  slotMessage={slotMessage} setSlotMessage={setSlotMessage} calendar={calendar}/>\r\n            {daySlots()}\r\n        </div>\r\n    )\r\n}","import classNames from \"classnames\"\r\n\r\nexport default function Time({timeArr, heigh, ...rest}) \r\n{\r\n\r\n    const timeSlotClassName = classNames(`bg-white flex  md:h-full ${heigh} w-full flex-1 border-b-2 border-black items-center justify-center`)\r\n    return (\r\n        <div \r\n            className={`md:flex h-full min-w-[50px] flex-col bg-white sticky left-0 z-[3] pointer-events-none`}>\r\n                <div className=\"h-20 border-b-2 border-black flex justify-center items-center \">Czas</div>\r\n                {timeArr.map((time, index) => \r\n                {\r\n                    return <div key={time} className={`${timeSlotClassName} ${index === timeArr.length - 1? 'border-none' : '' }` } time={time}>{time}</div>\r\n                })}\r\n        </div>)\r\n}","\r\nimport {useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport DayColumn from './DayColumn';\r\nimport Time from './Time';\r\n\r\n\r\nexport default function Week({ allDaysInMonth, allDaysLeftInMonth, allWeeksInMonth, allWeeksLeftInMonth, calendar, date, slotMessage,setSlotMessage}) \r\n{\r\n\r\n\r\n  const {time, name, slots} = calendar;\r\n  const DAYS_OF_WEEK = ['PONIEDZIAŁEK', 'WTOREK', 'ŚRODA', 'CZWARTEK', 'PIĄTEK', 'SOBOTA', 'NIEDZIELA'];\r\n  const generateTimes = (timeStart, timeEnd, timeBetween) =>\r\n  {\r\n    const times = [];\r\n    let currentTime = timeStart;\r\n    while (currentTime <= timeEnd) {\r\n      times.push(currentTime);\r\n      const [hours, minutes] = currentTime.split(':');\r\n      const currentMinutes = parseInt(hours) * 60 + parseInt(minutes);\r\n      const beetwMinutes = parseInt(timeBetween.split(':')[0]) * 60 + parseInt(timeBetween.split(':')[1]);\r\n      const nextMinutes = currentMinutes + beetwMinutes;\r\n      const nextHours = Math.floor(nextMinutes / 60).toString().padStart(2, '0');\r\n      const nextMinutesRemainder = nextMinutes % 60;\r\n      currentTime = `${nextHours}:${nextMinutesRemainder.toString().padStart(2, '0')}`;\r\n    }\r\n  \r\n    return times;\r\n  }\r\n  const [timeArr, setTimeArr] = useState(generateTimes(time.timeFrom, time.timeTo, time.timeSpace));\r\n  const stickyLeftSpace = [\r\n    'left-0',\r\n    'left-1',\r\n    'left-2',\r\n    'left-3',\r\n    'left-4',\r\n    'left-5',\r\n    'left-6',\r\n    'left-7',\r\n    'left-8',\r\n  ]\r\n\r\n\r\n  const getSpaceOfSlot = () =>\r\n  {\r\n    let spaceToReturn = 0;\r\n    for (let i = 0; i < slots.length; i++) \r\n    {\r\n\r\n      const slot = slots[i];\r\n      const spaceToInt = parseInt(slot.space);\r\n\r\n      if (spaceToReturn < spaceToInt)\r\n        spaceToReturn = spaceToInt;\r\n    }\r\n\r\n    const heighsForSpaces = [\r\n      {space: 1, heigh: 'h-10'},\r\n      {space: 2, heigh: 'h-20'},\r\n      {space: 3, heigh: 'h-32'},\r\n      {space: 4, heigh: 'h-40'},\r\n      {space: 5, heigh: 'h-52'},\r\n      {space: 6, heigh: 'h-60'},\r\n    ]\r\n\r\n    for (let i = 0; i < heighsForSpaces.length; i++) \r\n    {\r\n      const settings = heighsForSpaces[i];\r\n\r\n      if (settings.space === spaceToReturn)\r\n        return settings.heigh\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  const heighOfSlot = getSpaceOfSlot();\r\n\r\n  return(\r\n    <div className={'w-full h-full snap snap-y snap-mandatory flex overflow-x-scroll  '}>\r\n     {allWeeksLeftInMonth.map((week, index)=>\r\n        {\r\n\r\n          if (week.length === 0)\r\n          return false;\r\n\r\n          return (\r\n            <section key={index} className={`snap-start min-w-full min-h-full border-black bg-gray-300 flex flex-row overflow-y-scroll sticky ${index === 0 || index ===  allWeeksLeftInMonth.length-1 ? 'left-0' : `${stickyLeftSpace[index]} border-l-2`}`}>\r\n            <Time timeArr={timeArr} heigh={heighOfSlot}\r\n            // className={dayTimeColumnClass}\r\n            />\r\n            {/* only days for this week */}\r\n            {DAYS_OF_WEEK.map((day, dayIndex) => \r\n            {\r\n              \r\n              let doesDayExist = false;\r\n              let dayDate;\r\n              for (let i = 0; i < week.length; i++) \r\n              {\r\n                const dayInWeek = week[i];\r\n                if (dayInWeek.day.toUpperCase() === day)\r\n                {\r\n                  doesDayExist = true;\r\n                  dayDate = dayInWeek.date;\r\n                  break;\r\n                }\r\n              }\r\n              \r\n\r\n              if (doesDayExist)\r\n              return <DayColumn \r\n                // className={dayTimeColumnClass} \r\n                day={day} \r\n                dayDate = {dayDate}\r\n                isActive={!!(allWeeksLeftInMonth[index]?.[dayIndex])} \r\n                isBlank={false}\r\n                timeArr={timeArr}\r\n                date={date}\r\n                weekIndex={index}\r\n                key={dayIndex}\r\n                calendar={calendar}\r\n                heigh={heighOfSlot}\r\n                slotMessage={slotMessage}\r\n                setSlotMessage={setSlotMessage}\r\n                />\r\n              else\r\n              return <DayColumn\r\n                // className={dayTimeColumnClass}\r\n                day={day}\r\n                isActive={!!(allWeeksLeftInMonth[index]?.[dayIndex])}\r\n                isBlank={true}\r\n                key={dayIndex}\r\n                calendar={calendar}\r\n                />\r\n            })}\r\n            \r\n          </section>\r\n          )\r\n        })}\r\n    </div>\r\n  )\r\n\r\n}\r\n    ","\r\nimport classNames from \"classnames\";\r\nimport Week from \"./Week\";\r\n\r\nexport default function Month({calendar, date,  slotMessage, setSlotMessage}) \r\n{\r\n\r\n  console.log(calendar);\r\n\r\n    const className = classNames('');\r\n    const thisYear = new Date().getFullYear();\r\n\r\n    const [month, year] = date.split('.');\r\n    const MONTHS = ['STYCZEŃ', 'LUTY', 'MARZEC', 'KWIECIEŃ', 'MAJ', 'CZERWIEC', 'LIPIEC', 'SIERPIEŃ', 'WRZESIEŃ', 'PAŹDZIERNIK', 'LISTOPAD', 'GRUDZIEŃ'];\r\n    const DAYS_OF_WEEK = ['NIEDZIELA', 'PONIEDZIAŁEK', 'WTOREK', 'ŚRODA', 'CZWARTEK', 'PIĄTEK', 'SOBOTA'];\r\n    function getDaysAndWeeksInMonth(dateStr) {\r\n      const [monthStr, yearStr] = dateStr.split('.');\r\n      const month = MONTHS.indexOf(monthStr.toUpperCase());\r\n      const year = parseInt(yearStr, 10);\r\n      const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n      const currentDate = new Date();\r\n      currentDate.setHours(0);\r\n      currentDate.setMinutes(0);\r\n      currentDate.setSeconds(0);\r\n      const currentYear = currentDate.getFullYear();\r\n      const currentMonth = currentDate.getMonth();\r\n      const currentDay = currentDate.getDate();\r\n      const firstDayOfMonth = new Date(year, month, 1).getDay();\r\n      const allDaysInMonth = [];\r\n      const allDaysLeftInMonth = [];\r\n      const allWeeksInMonth = [];\r\n      const allWeeksLeftInMonth = [];\r\n    \r\n      //days\r\n      for (let i = 1; i <= daysInMonth; i++) \r\n      {\r\n        const date = new Date(year, month, i);\r\n        const dayOfWeek = DAYS_OF_WEEK[date.getDay()];\r\n        const day = \r\n        {\r\n          day: dayOfWeek,\r\n          date: date\r\n        };\r\n\r\n        if (calendar.bannedDays.includes(day.day))\r\n          continue;\r\n\r\n        allDaysInMonth.push(day)\r\n        currentDate.setHours(0, 0, 0, 0);\r\n        if (date.getTime() >= currentDate.getTime()) \r\n          allDaysLeftInMonth.push(day);\r\n        else\r\n          allDaysLeftInMonth.push(false)\r\n      }\r\n    \r\n      let currentWeek = [];\r\n      let currentWeekLeft = [];\r\n\r\n      //weeks\r\n      for (let i = 1; i <= daysInMonth; i++) \r\n      {\r\n        const date = new Date(year, month, i);\r\n        const dayOfWeek = date.getDay();\r\n        if (dayOfWeek === 1) \r\n        {\r\n          allWeeksInMonth.push(currentWeek);\r\n          allWeeksLeftInMonth.push(currentWeekLeft);\r\n          currentWeek = [];\r\n          currentWeekLeft = [];\r\n        }\r\n        const day = \r\n        {\r\n          day: DAYS_OF_WEEK[dayOfWeek],\r\n          date: date\r\n        };\r\n\r\n        if (calendar.bannedDays.includes(day.day))\r\n          continue;\r\n\r\n        currentWeek.push(day);\r\n        currentDate.setHours(0, 0, 0, 0);\r\n        if (date.getTime() >= currentDate.getTime()) \r\n        {\r\n          currentWeekLeft.push(day);\r\n        }\r\n      }\r\n        allWeeksInMonth.push(currentWeek);\r\n        allWeeksLeftInMonth.push(currentWeek);\r\n\r\n      return {\r\n        allDaysInMonth: allDaysInMonth,\r\n        allDaysLeftInMonth: allDaysLeftInMonth,\r\n        allWeeksInMonth: allWeeksInMonth.filter(subarray => subarray.length > 0),\r\n        allWeeksLeftInMonth: allWeeksLeftInMonth.filter(subarray => subarray.length > 0),\r\n      };\r\n    }\r\n\r\n\r\n    const {allDaysInMonth, allDaysLeftInMonth, allWeeksInMonth, allWeeksLeftInMonth} = getDaysAndWeeksInMonth(date);\r\n\r\n    if (allWeeksLeftInMonth.length === 0)\r\n      return (\r\n        <div className={`w-full h-full flex justify-center items-start mt-[10%] text-sm md:text-base underline pointer-events-none`}>\r\n          <h3>Brak miesięcy do wyświetlenia</h3>\r\n        </div>\r\n      );\r\n\r\n    return (\r\n        <div className={`w-full h-full`}>\r\n          {/* if padding will ever change remember to change padding in animated.div in MonthCarosuel to see the overflow x */}\r\n          <h3 className=\"flex justify-center items-center p-2 border-b-2 border-black font-semibold sticky top-10 bg-gray-100\">\r\n            {date}\r\n          </h3>\r\n\r\n          <div className=\"w-full h-[calc(100%_-_4.60rem)]\">\r\n          <Week \r\n            allDaysInMonth={allDaysInMonth} \r\n            allDaysLeftInMonth={allDaysLeftInMonth} \r\n            allWeeksInMonth={allWeeksInMonth} \r\n            allWeeksLeftInMonth={allWeeksLeftInMonth} \r\n            calendar={calendar}\r\n            date={date}\r\n            slotMessage={slotMessage}\r\n            setSlotMessage={setSlotMessage}\r\n            />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import {useMemo, useState } from \"react\";\r\nimport {useSprings, animated } from \"react-spring\";\r\n\r\nimport Month from \"./Month\";\r\n\r\nexport default function MonthCarosuel({calendar, displayedMonth, monthsCountForMonthCarousel, slotMessage,setSlotMessage}) \r\n{\r\n\r\n    const {date} = calendar;\r\n    const renderMonths = useMemo(()=>\r\n    {\r\n      return date.map((month, index) => <Month key={index} calendar={calendar} date={date[index]}  slotMessage={slotMessage} setSlotMessage={setSlotMessage}/>)\r\n    }, [])\r\n\r\n    const [months, setMonths] = useState(renderMonths);\r\n\r\n    const monthCarousel = useSprings(\r\n        monthsCountForMonthCarousel,\r\n        date.map((month, index) => ({\r\n          transform: `translateX(${(index - displayedMonth) * 100}%)`,\r\n          position: \"absolute\",\r\n          width: \"full\",\r\n          height: \"full\",\r\n          top: 0,\r\n          left: 0,\r\n          zIndex: index === displayedMonth ? 1 : 0,\r\n        }))\r\n      );\r\n    return (\r\n        <div className=\"relative w-full h-full\">\r\n            {monthCarousel.map((props, index) => (\r\n              //pb for overflow x visibility\r\n              <animated.div key={index} className=\"absolute w-full h-full\" style={{ ...props }}>\r\n                {months ? months[index] : null}\r\n              </animated.div>\r\n            ))}\r\n    </div>\r\n    )\r\n}","import classNames from \"classnames\";\r\nexport default function SelectGroups({selectedGroups, setSelectedGroups, groups}) \r\n{\r\n    const handleDayClick = index =>\r\n    {\r\n        const chosedGroup = groups[index].toUpperCase();\r\n        if (selectedGroups.includes(chosedGroup))\r\n            setSelectedGroups(selectedGroups.filter(day => {return day !== chosedGroup}))\r\n        else\r\n            setSelectedGroups([...selectedGroups, chosedGroup])\r\n    }\r\n\r\n    const renderDays = groups.map((group, index)=>\r\n        {\r\n\r\n            const classes = classNames(\"text-sm uppercase text-center px-1 py-2 m-1 cursor-pointer duration-150 active:bg-sky-400 active:scale-110\",\r\n            selectedGroups.includes(group.toUpperCase())? 'bg-pink-200 hover:bg-pink-300' : 'bg-sky-200 hover:bg-sky-300'\r\n            )\r\n            \r\n            return (\r\n            <li \r\n                onClick={() => handleDayClick(index)}\r\n                className={classes}\r\n                key={group}\r\n                >{group}</li>)\r\n        })\r\n\r\n    return (\r\n        <div className=\"flex flex-col\">\r\n        <ul className=\"flex flex-row justify-start w-full  overflow-x-scroll  md:overflow-x-auto\">\r\n            {renderDays}\r\n        </ul>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import classNames from \"classnames\";\r\nexport default function SelectTimes({selectedTimes, setSelectedTimes, timeArr, setTimesError, selectedTimesError}) \r\n{\r\n    const handleDayClick = index =>\r\n    {\r\n        if (selectedTimesError)\r\n            setTimesError(false);\r\n\r\n        const chosedTime = timeArr[index].toUpperCase();\r\n        if (selectedTimes.includes(chosedTime))\r\n            setSelectedTimes(selectedTimes.filter(time => {return time !== chosedTime}))\r\n        else\r\n            setSelectedTimes([...selectedTimes, chosedTime])\r\n    }\r\n\r\n    const renderDays = timeArr.map((time, index)=>\r\n        {\r\n\r\n            const classes = classNames(\"text-sm uppercase text-center px-1 py-2 m-1 cursor-pointer duration-150 active:bg-sky-400 active:scale-110\",\r\n            selectedTimes.includes(time.toUpperCase())? 'bg-pink-200 hover:bg-pink-300' : 'bg-sky-200 hover:bg-sky-300'\r\n            )\r\n            \r\n            return (\r\n            <li \r\n                onClick={() => handleDayClick(index)}\r\n                className={classes}\r\n                key={time}\r\n                >{time}</li>)\r\n        })\r\n\r\n    return (\r\n        <div className=\"flex flex-col\">\r\n        <ul className=\"flex flex-row justify-start w-full  overflow-x-scroll  md:overflow-x-auto\">\r\n            {renderDays}\r\n        </ul>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import { useEffect, useState } from 'react';\r\nimport Close from '../../../components/ui/Close';\r\nimport SelectGroups from './SelectGroups';\r\nimport SelectTimes from './SelectTimes';\r\nimport useCalendars from '../../../hooks/useCalendars';\r\nexport default function AddCalendarMessageSettings({timeArr, dayDate, setDisplayedFrom, calendar, setGlobalSlotMessage, globalSlotMessage, displayedFrom}) \r\n{\r\n    let showRemoveButton = false;\r\n    if (globalSlotMessage)\r\n        showRemoveButton = true;\r\n    \r\n    const {updateCalendar} = useCalendars();\r\n    const [slotMessageError, setSlotMessageError] = useState(false);\r\n    const [selectedTimesError, setTimesError] = useState(false);\r\n\r\n\r\n    const [thisSlotMessage, setThisSlotMessage] = useState('');\r\n    const [selectedGroups, setSelectedGroups] = useState([]);\r\n    const [selectedTimes, setSelectedTimes] = useState([]);\r\n    const [selectedSlots, setSelectedSlots] = useState()\r\n\r\n\r\n    const [showDeleteButton, setDeleteButton] = useState(false);\r\n\r\n\r\n    useEffect(()=>\r\n    {\r\n        setThisSlotMessage(globalSlotMessage.thisSlotMessage || '');\r\n        setSelectedGroups(globalSlotMessage.selectedGroups || []);\r\n        setSelectedTimes(globalSlotMessage.selectedTimes || []);\r\n\r\n    },[globalSlotMessage, displayedFrom])\r\n\r\n\r\n    useEffect(()=>\r\n    {\r\n        if (thisSlotMessage !== globalSlotMessage.thisSlotMessage \r\n            || selectedGroups !== globalSlotMessage.selectedGroups\r\n            || selectedTimes !== globalSlotMessage.selectedTimes )\r\n            setDeleteButton(false);\r\n        else\r\n            setDeleteButton(true);\r\n\r\n            \r\n    }, [thisSlotMessage, selectedGroups, , globalSlotMessage])\r\n\r\n\r\n    \r\n\r\n\r\n    const groups = ['GRUPA 1', 'GRUPA 2', 'GRUPA 3', 'GRUPA 4', 'GRUPA 5', 'GRUPA 6'];\r\n\r\n\r\n    const handleSlotNameError = (boolean) => setSlotMessageError(boolean);\r\n\r\n    // const handleCloseClick = () => close(false)\r\n    const handleCloseClick = () => \r\n    {\r\n        setDisplayedFrom(0);\r\n\r\n        setTimeout(() => {\r\n            setGlobalSlotMessage(false);\r\n        }, 350);\r\n    }\r\n\r\n    const handleSlotNameChange = (event) => {\r\n\r\n        if (slotMessageError)\r\n            setSlotMessageError(false);\r\n        \r\n        setThisSlotMessage(event.target.value);\r\n    }\r\n\r\n    const handleChangeClick = (event) => \r\n    {\r\n        event.preventDefault();\r\n        \r\n        const slotMessagesToUpdate = calendar.slotMessages.map((message, index)=>\r\n        {\r\n            const thisMessage = JSON.stringify(message);\r\n            const messageToUpdate = JSON.stringify(globalSlotMessage);\r\n\r\n            if (thisMessage === messageToUpdate)\r\n                return {thisSlotMessage, selectedGroups, dayDate, selectedTimes}\r\n            else\r\n                return {...message}\r\n        })\r\n        const newCalendar = {...calendar, slotMessages : slotMessagesToUpdate}\r\n        updateCalendar(calendar, newCalendar);\r\n\r\n        handleCloseClick();\r\n        \r\n    }\r\n    const handleAddClick = event => \r\n    {\r\n        event.preventDefault();\r\n\r\n        if (slotMessageError || selectedTimesError)\r\n            return;\r\n        \r\n        if (thisSlotMessage === '' )\r\n        {\r\n            setSlotMessageError(true)\r\n            return\r\n        }\r\n\r\n        if (selectedTimes.length === 0)\r\n        {\r\n            setTimesError(true);\r\n            return\r\n        }\r\n\r\n        const slotMessagesToUpdate = [...calendar.slotMessages, {thisSlotMessage, selectedGroups, dayDate, selectedTimes}]\r\n        const newCalendar = {...calendar, slotMessages : slotMessagesToUpdate}\r\n\r\n        updateCalendar(calendar, newCalendar);\r\n\r\n        handleCloseClick()\r\n    };\r\n    \r\n    const handleRemoveClick = event => \r\n    {\r\n        event.preventDefault();\r\n\r\n        event.preventDefault();\r\n        const slotMessagesToUpdate = calendar.slotMessages.filter(message => JSON.stringify(message) !== JSON.stringify(globalSlotMessage))\r\n        const newCalendar = {...calendar, slotMessages : slotMessagesToUpdate}\r\n\r\n        updateCalendar(calendar, newCalendar);\r\n        handleCloseClick();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3\r\n            className=\" bg-violet-200 py-2 uppercase font-semibold  mb-2 pl-2\"\r\n            >{globalSlotMessage !== false? 'Dodaj wiadomość' : 'Edytuj wiadomość'}\r\n            <Close onClick={handleCloseClick}/>\r\n                \r\n            </h3>\r\n            <form className=\" bg-white w-full h-full flex flex-col [&>*]:mt-2 [&>*]:mx-2 [&>label]:uppercase \">\r\n                <label className={`mx-2 duration-75  ${slotMessageError? 'valid text-red-300' : 'text-normal'}`} form='text'>Treść wiadomości</label>\r\n                <textarea \r\n                type='text'\r\n                className=\" h-20 border-2 border-opacity-100 rounded-sm hover:border-gray-400 duration-300 ease-in-out\"\r\n                value={thisSlotMessage} \r\n                onChange={handleSlotNameChange}/>\r\n\r\n                <label className={`mx-2 duration-75  ${selectedTimesError? 'valid text-red-300' : 'text-normal'}`}>Czas</label>\r\n                <SelectTimes selectedTimes={selectedTimes} setSelectedTimes={setSelectedTimes} timeArr={timeArr} setTimesError={setTimesError} selectedTimesError={selectedTimesError}/>\r\n               \r\n\r\n                <label className=\"mx-2\">Dla grup</label>\r\n                    <SelectGroups selectedGroups={selectedGroups} setSelectedGroups={setSelectedGroups} groups={groups}/>\r\n                \r\n                <div className=' mt-14 mb-2 flex w-full justify-center flex-row'>\r\n\r\n                {globalSlotMessage !== false? <button \r\n                className=\"w-20 rounded-md border-sky-500  border-2 mx-1\r\n                            hover:text-white hover:bg-sky-500 transition ease-linear duration-150 hover:font-semibold\" \r\n                            onClick={handleChangeClick}>{\"Zmień\"}</button>\r\n                :\r\n                <button \r\n                className=\"w-20 rounded-md border-sky-500  border-2 mx-1\r\n                            hover:text-white hover:bg-sky-500 transition ease-linear duration-150 hover:font-semibold\" \r\n                            onClick={handleAddClick}>{\"Dodaj\"}</button>}\r\n                {showDeleteButton && <button \r\n                className=\"w-20 rounded-md border-red-400  border-2 mx-1\r\n                            hover:text-white hover:bg-red-500 transition ease-linear duration-150 hover:font-semibold\" \r\n                            onClick={handleRemoveClick}>Usuń</button>}\r\n                </div>\r\n                </form>\r\n        </div>\r\n    );\r\n\r\n};\r\n","import Close from \"../../../components/ui/Close\";\r\nexport default function MenageCalendarMessageSettings({handleSetSlotMessage, closeModal, dayDate, setDisplayedFrom, calendar}) \r\n{\r\n\r\n    const slotMessages = calendar.slotMessages;\r\n    const handleCloseClick = () =>\r\n    {\r\n        closeModal(false);\r\n    }\r\n\r\n\r\n     return (\r\n        <div className=\"h-full w-full flex flex-col\">\r\n            <h3\r\n            className=\" bg-violet-200 py-2 uppercase font-semibold  mb-2 pl-2 w-full\"\r\n            >{'Wiadomości w dniu: '} {dayDate}\r\n            <Close onClick={handleCloseClick}/>\r\n            </h3>\r\n        \r\n        <div className=\"flex flex-wrap justify-center h-full overflow-auto\">\r\n            {slotMessages.map((slotMessage, index)=>\r\n            {\r\n                \r\n                if (slotMessage.dayDate === dayDate)\r\n                return <button key={index} onClick={()=>handleSetSlotMessage(slotMessage)} className=\"bg-gray-400 w-24 overflow-hidden h-24 p-2 cursor-pointer active:scale-110 duration-150 m-2\">{slotMessage.thisSlotMessage}</button>\r\n                else\r\n                return false;\r\n\r\n            })}\r\n        </div>\r\n    <div className=\" flex justify-center h-fit w-full  ml-auto mr-auto sticky bottom-0 bg-white\">\r\n    <button onClick={()=>handleSetSlotMessage(false)} \r\n            className=\"self-end mb-2 rounded-md border-sky-500 h-12 w-fit  border-2 mx-1 hover:text-white hover:bg-sky-500 transition ease-linear duration-150 hover:font-semibold\"\r\n            >Dodaj nową wiadomość</button>\r\n    </div>\r\n    </div>\r\n     )\r\n};\r\n","import AddCalendarMessageSettings from \"./AddCalendarMessageSettings\";\r\nimport {motion as m} from 'framer-motion';\r\nimport { useSprings, animated } from \"react-spring\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport MenageCalendarMessageSettings from \"./MenageCalendarMessageSettings\";\r\nimport { Socket } from \"socket.io-client\";\r\n\r\nexport default function CalendarMessageSettings({slotMessage, setSlotMessage, calendar}) \r\n{\r\n\r\n\r\n    //messagestructure\r\n    //{dayDate: '...', time: [...], }\r\n    const [displayedFrom, setDisplayedFrom] = useState(0); \r\n    const [globalSlotMessage, setGlobalSlotMessage] = useState(false);\r\n    const {timeArr, dayDate} = slotMessage;\r\n    \r\n\r\n    // if (timeArr && _dayDate)\r\n    // {\r\n    //     const allCalendarSlotsMessages = calendar.slotMessages;\r\n\r\n    //     const slotMessagesForThisDay = allCalendarSlotsMessages.map((message, index)=>\r\n    //     {\r\n    //         if (message.dayDate === _dayDate)\r\n    //         return message\r\n    //     })\r\n    //     setThisDayMessages(slotMessagesForThisDay);\r\n    // }\r\n\r\n    const handleSetSlotMessage = (slotMessage) =>\r\n    {\r\n        if (!slotMessage)\r\n        {\r\n            setGlobalSlotMessage(false);\r\n        }\r\n        else\r\n        {\r\n            setGlobalSlotMessage(slotMessage);\r\n        }\r\n            setDisplayedFrom(1)\r\n    }\r\n\r\n\r\n    const formToShow = [\r\n    <MenageCalendarMessageSettings \r\n    timeArr={timeArr} \r\n    dayDate={dayDate} \r\n    closeModal={setSlotMessage} \r\n    handleSetSlotMessage={handleSetSlotMessage} \r\n    setDisplayedFrom={setDisplayedFrom} \r\n    calendar={calendar} />, \r\n    \r\n    <AddCalendarMessageSettings \r\n    timeArr={timeArr} \r\n    dayDate={dayDate} \r\n    setDisplayedFrom={setDisplayedFrom} \r\n    calendar={calendar} \r\n    globalSlotMessage={globalSlotMessage} \r\n    setGlobalSlotMessage={setGlobalSlotMessage}\r\n    displayedFrom={displayedFrom}\r\n    />]\r\n\r\n    const formCount = formToShow.length;\r\n\r\n    const springs = useSprings(\r\n        formCount,\r\n        formToShow.map((form, index) => ({\r\n        transform: `translateX(${(index - displayedFrom) * 100}%)`,\r\n        position: \"absolute\",\r\n        width: \"full\",\r\n        height: \"full\",\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: index === displayedFrom ? 1 : 0\r\n        }))\r\n    );\r\n\r\n\r\n    if (!slotMessage)\r\n    return false;\r\n\r\n    return (\r\n     <div className=\"bg-gray-900 bg-opacity-10 absolute w-full h-full z-[11]\">\r\n            <m.div className=\"bg-white md:w-96 w-5/6 h-[25em] mx-auto mt-24 md:mt-36 border-2 border-black relative flex flex-col z-20 overflow-hidden\" initial={{y: '100%'}} animate={{y: \"0%\"}} transition={{type: 'spring', stiffness: 110, damping: 12}}>\r\n            {springs.map((props, index) => (\r\n                  <animated.div key={index} className=\" w-full h-full\" style={{ ...props }}>\r\n                    {formToShow[index]}\r\n                  </animated.div>\r\n                ))}\r\n            </m.div>\r\n    </div>\r\n        );\r\n\r\n\r\n       \r\n};\r\n","import { useState , useMemo, useEffect} from \"react\";\r\nimport {LayoutGroupContext, motion as m} from 'framer-motion';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport useCalendars from '../../hooks/useCalendars';\r\nimport useSlots from \"../../hooks/useSlots\";\r\n\r\nimport Menu from '../../components/menu/Menu'\r\nimport Confirm from '../../components/ui/Confirm';\r\nimport MonthNavbar from \"./MonthNavbar\";\r\nimport MonthCarosuel from \"./MonthCarosuel\";\r\nimport LoadingPage from '../Loading/LoadingPage';\r\nimport Message from \"../../components/ui/Message\";\r\nimport CalendarMessageSettings from \"./AdminSettings/CalendarMessageSettings\";\r\n\r\nexport default function CalendarPage({})\r\n{\r\nconst {calendars, navigate, confirm, isFetching, message} = useCalendars();\r\nconst {calendarName} = useParams();\r\n//all nasty code below is written in case of refresh page while rendering calendar page\r\n//code will check if data is still fetching and wait for it till the end\r\nconst [slotMessage, setSlotMessage] = useState(false);\r\nconst confirmCalendar = useMemo(()=>\r\n{\r\n  const parseStringToUrl = string => string.replaceAll(' ', '_').normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n  for (let i = 0; i < calendars.length; i++) \r\n  {\r\n    const thisCalendar = calendars[i];\r\n    const thisCalendarName = parseStringToUrl(thisCalendar.name);\r\n\r\n    if (calendarName === thisCalendarName)\r\n    { \r\n      return thisCalendar;\r\n    }\r\n  }\r\n  return false;\r\n}, [isFetching, calendars])\r\n\r\nconst [calendar, setCalendar] = useState(confirmCalendar);\r\n\r\nuseEffect(()=>\r\n{\r\n  setCalendar(confirmCalendar);\r\n},[calendars])\r\n\r\nuseEffect(()=>\r\n{ \r\n  setTimeout(() => {\r\n\r\n    if (!confirmCalendar && !isFetching)\r\n      navigate('/brak_strony');\r\n\r\n      setCalendar(confirmCalendar);\r\n  }, 1000);\r\n  \r\n}, [isFetching])\r\n\r\nconst [displayedMonth, setDisplayedMonth] = useState(0); \r\nconst {slotsArray ,removeAllSlots} = useSlots();\r\n\r\nuseEffect(()=>\r\n{\r\n    return () =>\r\n    {\r\n      if (slotsArray.length !== 0)\r\n        removeAllSlots();\r\n    }\r\n}, [])\r\n\r\nif (!calendar)\r\n  return <LoadingPage/>\r\n\r\n  const {name, date} = calendar;\r\n\r\n  const variantsForCalendarPage = \r\n  {\r\n        hidden: { opacity: 0, x: -200, y: 0 },\r\n        enter: { opacity: 1, x: 0, y: 0 },\r\n      // exit: { opacity: 0, x: -200, y: 0 },\r\n        exit: { opacity: 0 },\r\n  }\r\n \r\n  const monthsCountForMonthCarousel = date.length;\r\n    return(\r\n      <>\r\n        <m.div \r\n          className=\" w-screen h-screen flex items-center flex-col bg-zinc-100\" \r\n          variants={variantsForCalendarPage} initial='hidden' animate='enter' transition={{type: 'linear'}} exit='exit'>\r\n          <Confirm message={confirm.message} submit={confirm.submit} handleSubmit={confirm.handleSubmit}/>\r\n          <Message message={message} theme='bg-purple-200'/>\r\n          <Menu calendarName={name} theme='bg-slate-400'/>\r\n          <CalendarMessageSettings  slotMessage={slotMessage} setSlotMessage={setSlotMessage} calendar={calendar}/>\r\n            <div className={`mt-4 w-[95%] h-[90%] md:mt-6 md:max-w-[90%] md:[90% md:mx-auto rounded-sm text-xs  border-2 border-black overflow-hidden`}>\r\n              <MonthNavbar displayedMonth={displayedMonth} setDisplayedMonth={setDisplayedMonth} monthsCountForMonthCarousel={monthsCountForMonthCarousel}/>      \r\n              <MonthCarosuel calendar={calendar} monthsCountForMonthCarousel={monthsCountForMonthCarousel} displayedMonth={displayedMonth} slotMessage={slotMessage} setSlotMessage={setSlotMessage}/>\r\n            </div>\r\n        </m.div>\r\n        </>\r\n      );\r\n}\r\n\r\n\r\n"],"names":["Close","_ref","onClick","rest","_objectWithoutProperties","_excluded","closeClassName","classNames","className","_jsx","CloseSlotSettingsIcon","_objectSpread","useContext","SlotContext","MonthNavbar","displayedMonth","setDisplayedMonth","monthsCountForMonthCarousel","_jsxs","children","disabled","DayColumnHeader","dayDate","day","slots","isBlank","setSlotMessage","slotMessage","timeArr","isAdmin","calendar","useAuthentication","adminSettingsRef","useRef","pressTimer","handleMouseDown","setTimeout","handleMouseUp","event","preventDefault","clearTimeout","concat","ref","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","map","slot","index","name","DaySlot","_thisSlot","_useSlots","useSlots","updateSlotsArray","updateSlot","emitMessage","_useState","useState","_useState2","_slicedToArray","thisSlot","setThisSlot","user","setMessage","useCalendars","useMemo","handleSign","setConfirm","sign","handleSignClick","confirmed","newSlot","handleUnsignClick","transitionStyles","entering","opacity","transform","entered","exiting","exited","transitions","useTransition","from","display","enter","leave","config","duration","message","toLowerCase","time","submit","handleSubmit","style","item","animated","CalendarColumnMessageSlot","thisSlotMessage","selectedGroups","DayColumn","_dayDate","isActive","date","weekIndex","heigh","_id","records","slotMessages","handleRecords","calendarID","removeAllSlots","useEffect","bannedDays","includes","toUpperCase","data","_day","getDate","toString","padStart","_month","getMonth","_year","getFullYear","convertDate","filteredMessages","filter","_Fragment","find","selectedTimes","showSlotMessage","key","spaces","i","space","slotName","slotIndex","fullDate","push","slotHolderClassName","order","Time","timeSlotClassName","length","Week","allDaysInMonth","allDaysLeftInMonth","allWeeksInMonth","allWeeksLeftInMonth","DAYS_OF_WEEK","timeStart","timeEnd","timeBetween","times","currentTime","_currentTime$split","split","_currentTime$split2","hours","minutes","nextMinutes","parseInt","nextHours","Math","floor","nextMinutesRemainder","generateTimes","timeFrom","timeTo","timeSpace","stickyLeftSpace","heighOfSlot","spaceToReturn","spaceToInt","heighsForSpaces","settings","getSpaceOfSlot","week","dayIndex","_allWeeksLeftInMonth$","_allWeeksLeftInMonth$2","doesDayExist","dayInWeek","Month","console","log","Date","_date$split","_date$split2","MONTHS","_getDaysAndWeeksInMon","dateStr","_dateStr$split","_dateStr$split2","monthStr","yearStr","month","indexOf","year","daysInMonth","currentDate","setHours","setMinutes","setSeconds","getDay","getTime","currentWeek","currentWeekLeft","dayOfWeek","subarray","getDaysAndWeeksInMonth","MonthCarosuel","renderMonths","months","monthCarousel","useSprings","position","width","height","top","left","zIndex","props","SelectGroups","setSelectedGroups","groups","renderDays","group","classes","chosedGroup","_toConsumableArray","handleDayClick","SelectTimes","setSelectedTimes","setTimesError","selectedTimesError","chosedTime","AddCalendarMessageSettings","setDisplayedFrom","setGlobalSlotMessage","globalSlotMessage","displayedFrom","updateCalendar","slotMessageError","setSlotMessageError","_useState3","_useState4","_useState5","_useState6","setThisSlotMessage","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","showDeleteButton","setDeleteButton","handleCloseClick","form","type","value","onChange","target","slotMessagesToUpdate","JSON","stringify","newCalendar","MenageCalendarMessageSettings","handleSetSlotMessage","closeModal","CalendarMessageSettings","formToShow","formCount","springs","m","initial","y","animate","transition","stiffness","damping","CalendarPage","_objectDestructuringEmpty","_useCalendars","calendars","navigate","confirm","isFetching","calendarName","useParams","confirmCalendar","thisCalendar","thisCalendarName","replaceAll","normalize","replace","setCalendar","slotsArray","LoadingPage","variants","hidden","x","exit","Confirm","Message","theme","Menu"],"sourceRoot":""}