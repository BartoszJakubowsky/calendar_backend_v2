{"version":3,"file":"static/js/49.f2565654.chunk.js","mappings":"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","sources":["hooks/useSlots.js","pages/Calendar/MonthNavbar.jsx","pages/Calendar/DayColumnHeader.jsx","pages/Calendar/DaySlot.jsx","pages/Calendar/DayColumn.jsx","pages/Calendar/Time.jsx","pages/Calendar/Week.jsx","pages/Calendar/Month.jsx","pages/Calendar/MonthCarosuel.jsx","pages/Calendar/CalendarPage.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport SlotContext from \"../context/slots\";\r\n\r\nfunction useSlots()\r\n{\r\n    return useContext(SlotContext);\r\n}\r\n\r\nexport default useSlots;\r\n\r\n\r\n\r\n","import classNames from \"classnames\";\r\n\r\nexport default function MonthNavbar({displayedMonth,setDisplayedMonth, monthsCountForMonthCarousel}) \r\n{\r\n\r\n    const handleShowPrevMonthClick = () => {\r\n        setDisplayedMonth((displayedMonth - 1 + monthsCountForMonthCarousel) % monthsCountForMonthCarousel);\r\n      };\r\n    \r\n    const handleShowNextMonthClick = () => {\r\n        setDisplayedMonth((displayedMonth + 1) % monthsCountForMonthCarousel);\r\n      };\r\n\r\n    return (\r\n        <div className=\"bg-blue-400 w-full h-10 flex justify-start\">\r\n        <button\r\n          className={classNames(\r\n              \"py-2 px-4  text-white\",\r\n              displayedMonth === 0 ? \"bg-gray-500 cursor-default\" : \"bg-blue-500 hover:bg-blue-600 cursor-pointer\"\r\n          )}\r\n          onClick={handleShowPrevMonthClick}\r\n          disabled={displayedMonth === 0}\r\n          >\r\n          Poprzedni miesiąc\r\n          </button>\r\n          <button\r\n          className={classNames(\r\n              \"py-2 px-4 rounded-r-md text-white\",\r\n              displayedMonth === monthsCountForMonthCarousel - 1 ? \"bg-gray-500 cursor-default\" : \"bg-blue-500 hover:bg-blue-600 cursor-pointer\"\r\n          )}\r\n          onClick={handleShowNextMonthClick}\r\n          disabled={displayedMonth === monthsCountForMonthCarousel - 1}\r\n          >\r\n          Następny miesiąc\r\n          </button>\r\n          </div>\r\n    )    \r\n}","export default function DayColumnHeader({dayDate, day, slots, isBlank}) \r\n{\r\n    return (\r\n        <div className={`h-20 w-40 flex-none border-b-2 border-black ${isBlank? 'bg-gray-300' :  'bg-amber-200'} flex flex-col`}>\r\n\r\n                {/* day and date */}\r\n                <div className='flex flex-col  justify-center items-center'>\r\n                    <span className='font-semibold'>{day}</span>\r\n                    <span>{dayDate}</span>\r\n                </div>\r\n                {isBlank? false : <div className='flex flex-row w-full h-full overflow-hidden'>\r\n                {/* slots name holder */}\r\n                {slots.map((slot, index) => {\r\n                    return (\r\n\r\n                        <span key={index} className=\"w-full h-full justify-center items-center overflow-hidden flex flex-wrap text-center border-2 break-words border-red-200\">{slot.name}</span>\r\n                    );\r\n                })}\r\n                </div>}\r\n            </div>  \r\n    )\r\n}","import {useEffect, useMemo, useState } from \"react\";\r\nimport { useTransition, animated} from 'react-spring';\r\nimport useSlots from '../../hooks/useSlots';\r\nimport useCalendars from \"../../hooks/useCalendars\";\r\nimport { calcLength } from \"framer-motion\";\r\nimport useAuthentication from \"../../hooks/useAuthentication\";\r\n\r\nexport default function DaySlot({_thisSlot, dayDate}) \r\n{\r\n\r\n\r\n  const {updateSlot, updateSlotsArray, emitMessage} = useSlots();\r\n  const [thisSlot, setThisSlot] = useState(_thisSlot);\r\n  const {user} = useAuthentication();\r\n  const {setMessage} = useCalendars();\r\n  useMemo(()=>\r\n  {\r\n    _thisSlot.handleSign = setThisSlot;\r\n    updateSlotsArray([_thisSlot]);\r\n  },[])\r\n\r\n    const {setConfirm} = useCalendars();\r\n    const sign = thisSlot.sign;\r\n    // const thisSlot = \r\n    // {\r\n    //     calendar : calendarName,\r\n    //     date,\r\n    //     weekIndex,\r\n    //     day : dayName,\r\n    //     time,\r\n    //     slotName,\r\n    //     slotIndex,\r\n    //     handleSign: handleSign,\r\n    //     sign:,\r\n    // };\r\n\r\nconst handleClick = event =>\r\n{\r\n    event.preventDefault();\r\n\r\n    //unsign\r\n    if (sign === user.name)\r\n    {\r\n        const message = `Czy na pewno chcesz wypisać się z dnia ${thisSlot.day.toLowerCase()} ${dayDate}, godzina ${thisSlot.time}?`\r\n        const submit = \"Wypisz mnie\"    \r\n        setConfirm({message : message, submit : submit, handleSubmit : handleUnsignClick})\r\n        // handleUnsignClick(true);\r\n\r\n    }\r\n    //sign\r\n    else\r\n    {\r\n        const message = `Czy na pewno chcesz zapisać się na ${thisSlot.time} w ${thisSlot.day.toLowerCase()} ${dayDate}?`\r\n        const submit = \"Zapisz mnie\"\r\n        setConfirm({message : message, submit : submit, handleSubmit : handleSignClick})\r\n        // handleSignClick(true);\r\n\r\n    }\r\n}\r\n\r\nconst handleSignClick = (confirmed) =>\r\n{\r\n\r\n    if (!confirmed)\r\n        return\r\n\r\n    const newSlot = {...thisSlot, sign: user.name}\r\n    handleSign(newSlot);\r\n}\r\n\r\nconst handleUnsignClick = (confirmed) =>\r\n{\r\n    if (!confirmed)\r\n        return\r\n\r\n        const newSlot = {...thisSlot, sign: ''}\r\n        handleSign(newSlot);\r\n        setMessage('Zostałeś wypisany!')\r\n}\r\n\r\nconst handleSign = newSlot =>\r\n{\r\n      emitMessage(newSlot);\r\n      setMessage('Zostałeś zapisany!')\r\n      setThisSlot(newSlot);\r\n\r\n\r\n        // setSign(newSlot.sign);\r\n}\r\n\r\nconst duration = 300;\r\nconst defaultStyle = {\r\n  opacity: 0,\r\n  transform: 'translateX(-50%)',\r\n  display: 'inline-block',\r\n};\r\nconst transitionStyles = {\r\n  entering: { opacity: 1, transform: 'translateX(0)' },\r\n  entered: { opacity: 1, transform: 'translateX(0)' },\r\n  exiting: { opacity: 0, transform: 'translateX(-50%)' },\r\n  exited: { opacity: 0, transform: 'translateX(-50%)' },\r\n};\r\n\r\n  const transitions = useTransition(sign !== '', {\r\n    from: defaultStyle,\r\n    enter: transitionStyles.entering,\r\n    leave: transitionStyles.exiting,\r\n    config: {\r\n      duration,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <button\r\n      className={`overflow-hidden w-full h-full border-2 border-red-200 duration-150 hover:backdrop-brightness-90 text-center active:bg-red-300\r\n        ${sign === '' ? '' : ''}\r\n        ${sign !== user.name && sign !== '' ? 'cursor-not-allowed pointer-events-none' : ''}\r\n      `}\r\n      onClick={handleClick}\r\n    >\r\n      {transitions((style, item) =>\r\n        item && (\r\n          <animated.span style={style}>\r\n            {sign}\r\n          </animated.span>\r\n        )\r\n      )}\r\n    </button>\r\n  );\r\n\r\n}\r\n\r\n// const tempCalendar = \r\n// {\r\n//     name: 'Środa Wielkopolska', \r\n//     date: ['KWIECIEŃ.2023', 'MAJ.2023', 'CZERWIEC.2023', 'LIPIEC.2023'], \r\n//     time: {timeFrom: '08:00', timeTo: '16:00', timeSpace: '01:00'}, \r\n//     slots: \r\n//     [\r\n//         {name: 'Oficjalne', space: '2', order: 1},\r\n//         {name: 'Nieoficjalne', space: '2', order: '2'}\r\n//     ]\r\n// }\r\n\r\n// const tempSigned = \r\n// {\r\n//     calendarName : name,\r\n//     month: date,\r\n//     day: thisDay,\r\n//     time: thisTime,\r\n//     slotName: slot.name,\r\n//     slotSpace: slot.space.slotSpace\r\n// }\r\n// slot = [name, order, space]\r\n// // const [slots, setSlots] = \r\n\r\n\r\n\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport useSlots from '../../hooks/useSlots';\r\nimport DayColumnHeader from './DayColumnHeader';\r\nimport DaySlot from './DaySlot';\r\n\r\nexport default function DayColumn({day, isActive, isBlank, timeArr, date, weekIndex, dayDate, calendar, ...rest}) \r\n{\r\n    const {_id, name, slots, records} = calendar\r\n    const {handleRecords} = useSlots();\r\n    const calendarID = _id;\r\n    //format dd.mm.yyyy\r\n    const convertDate = (dayDate) =>\r\n    {\r\n        const data = dayDate\r\n        const _day = data.getDate().toString().padStart(2, \"0\");\r\n        const _month = (data.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const _year = data.getFullYear().toString();\r\n        return `${_day}.${_month}.${_year}`;\r\n    }\r\n\r\n    const {removeAllSlots} = useSlots();\r\n    \r\n    useEffect(()=>\r\n    {\r\n\r\n        handleRecords(records);\r\n\r\n        return ()=>\r\n        {\r\n            removeAllSlots();\r\n        }\r\n    },[])\r\n\r\n    let _dayDate;\r\n\r\n    if (dayDate)\r\n        _dayDate = convertDate(dayDate);\r\n\r\n    \r\n    const daySlots = useMemo(()=>\r\n    {\r\n        if (isBlank)\r\n            return false\r\n        return (\r\n            <>\r\n            {timeArr.map((time, index) =>\r\n            {   \r\n\r\n                //cell day\r\n                return (\r\n                <div\r\n                    key={index} \r\n                    className=\"flex flex-row w-full h-full border-b-2 border-black\">\r\n                        {/* slots in cells / slots holder */}\r\n                        {slots.map(slot =>\r\n                        {   \r\n                            let spaces = [];\r\n\r\n                            for (let i = 0; i < slot.space; i++) \r\n                            {\r\n                                const key = name + day+ slot.name + time + i;\r\n\r\n                                const thisSlot = \r\n                                {\r\n                                    calendar : name,\r\n                                    date,\r\n                                    weekIndex,\r\n                                    day,\r\n                                    time,\r\n                                    slotName : slot.name,\r\n                                    slotIndex : i,\r\n                                    sign: '',\r\n                                    calendarID,\r\n                                };\r\n                                spaces.push(\r\n                                   <DaySlot \r\n                                    key={key}\r\n                                    dayDate={_dayDate}\r\n                                    _thisSlot={thisSlot}\r\n                                    \r\n                                    />\r\n                                )\r\n                            }\r\n                        //slot holder\r\n                        return <div key={slot.name} className={`flex flex-col w-full h-full order-${slot.order} overflow-hidden`}>\r\n                                {spaces}\r\n                                </div>\r\n                           \r\n                        })}\r\n                </div>)\r\n            })}\r\n            </>\r\n\r\n        )\r\n    },[])\r\n\r\n    return (\r\n        //column\r\n        <div className={`flex flex-col w-full ${isBlank? 'bg-gray-400 ' : 'bg-amber-100'}  border-l-2 border-black `}  key={day}>\r\n            <DayColumnHeader dayDate={_dayDate} day={day} slots={slots} isBlank={isBlank}/>\r\n            {daySlots}\r\n        </div>\r\n    )\r\n}","export default function Time({timeArr, ...rest}) \r\n{\r\n\r\n    return (\r\n        <div \r\n            className={`flex w-full flex-col bg-white`}>\r\n                <div className=\"h-20 border-b-2 border-black \"></div>\r\n                {timeArr.map((time, index) => \r\n                {\r\n                    return <div key={time} className={`bg-white flex w-10 h-10 flex-1 border-b-2 border-black items-center justify-center`} time={time}>{time}</div>\r\n                })}\r\n        </div>)\r\n}","\r\nimport {useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport DayColumn from './DayColumn';\r\nimport Time from './Time';\r\n\r\n\r\nexport default function Week({ allDaysInMonth, allDaysLeftInMonth, allWeeksInMonth, allWeeksLeftInMonth, calendar, date}) \r\n{\r\n\r\n\r\n  const {time, name, slots} = calendar;\r\n  const DAYS_OF_WEEK = ['PONIEDZIAŁEK', 'WTOREK', 'ŚRODA', 'CZWARTEK', 'PIĄTEK', 'SOBOTA', 'NIEDZIELA'];\r\n  const generateTimes = (timeStart, timeEnd, timeBetween) =>\r\n  {\r\n    const times = [];\r\n    let currentTime = timeStart;\r\n    while (currentTime <= timeEnd) {\r\n      times.push(currentTime);\r\n      const [hours, minutes] = currentTime.split(':');\r\n      const currentMinutes = parseInt(hours) * 60 + parseInt(minutes);\r\n      const beetwMinutes = parseInt(timeBetween.split(':')[0]) * 60 + parseInt(timeBetween.split(':')[1]);\r\n      const nextMinutes = currentMinutes + beetwMinutes;\r\n      const nextHours = Math.floor(nextMinutes / 60).toString().padStart(2, '0');\r\n      const nextMinutesRemainder = nextMinutes % 60;\r\n      currentTime = `${nextHours}:${nextMinutesRemainder.toString().padStart(2, '0')}`;\r\n    }\r\n  \r\n    return times;\r\n  }\r\n  const [timeArr, setTimeArr] = useState(generateTimes(time.timeFrom, time.timeTo, time.timeSpace));\r\n\r\n  const weekClassName = classNames('w-full h-full overflow-y-scroll overflow-x-scroll snap snap-y snap-mandatory');\r\n \r\n  return(\r\n    <div className={weekClassName}>\r\n     {allWeeksLeftInMonth.map((week, index)=>\r\n        {\r\n\r\n          if (week.length === 0)\r\n          return false;\r\n\r\n          return (\r\n            <section key={index} className={`snap-start h-full w-full bg-gray-100 flex flex-row`}>\r\n            <Time timeArr={timeArr} \r\n            // className={dayTimeColumnClass}\r\n            />\r\n            {/* only days for this week */}\r\n            {DAYS_OF_WEEK.map((day, dayIndex) => \r\n            {\r\n              \r\n              let doesDayExist = false;\r\n              let dayDate;\r\n              for (let i = 0; i < week.length; i++) \r\n              {\r\n                const dayInWeek = week[i];\r\n                if (dayInWeek.day.toUpperCase() === day)\r\n                {\r\n                  doesDayExist = true;\r\n                  dayDate = dayInWeek.date;\r\n                  break;\r\n                }\r\n              }\r\n              if (doesDayExist)\r\n              return <DayColumn \r\n                // className={dayTimeColumnClass} \r\n                day={day} \r\n                dayDate = {dayDate}\r\n                isActive={!!(allWeeksLeftInMonth[index]?.[dayIndex])} \r\n                isBlank={false}\r\n                timeArr={timeArr}\r\n                date={date}\r\n                weekIndex={index}\r\n                key={dayIndex}\r\n                calendar={calendar}\r\n                />\r\n              else\r\n              return <DayColumn\r\n                // className={dayTimeColumnClass}\r\n                day={day}\r\n                isActive={!!(allWeeksLeftInMonth[index]?.[dayIndex])}\r\n                isBlank={true}\r\n                key={dayIndex}\r\n                calendar={calendar}\r\n                />\r\n            })}\r\n            \r\n          </section>\r\n          )\r\n        })}\r\n    </div>\r\n  )\r\n\r\n}\r\n    ","\r\nimport classNames from \"classnames\";\r\nimport Week from \"./Week\";\r\n\r\nexport default function Month({calendar, date}) \r\n{\r\n\r\n\r\n\r\n    const className = classNames('');\r\n    const thisYear = new Date().getFullYear();\r\n\r\n    const [month, year] = date.split('.');\r\n    const MONTHS = ['STYCZEŃ', 'LUTY', 'MARZEC', 'KWIECIEŃ', 'MAJ', 'CZERWIEC', 'LIPIEC', 'SIERPIEŃ', 'WRZESIEŃ', 'PAŹDZIERNIK', 'LISTOPAD', 'GRUDZIEŃ'];\r\n    const DAYS_OF_WEEK = ['NIEDZIELA', 'PONIEDZIAŁEK', 'WTOREK', 'ŚRODA', 'CZWARTEK', 'PIĄTEK', 'SOBOTA'];\r\n    function getDaysAndWeeksInMonth(dateStr) {\r\n      const [monthStr, yearStr] = dateStr.split('.');\r\n      const month = MONTHS.indexOf(monthStr.toUpperCase());\r\n      const year = parseInt(yearStr, 10);\r\n      const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n      const currentDate = new Date();\r\n      const currentYear = currentDate.getFullYear();\r\n      const currentMonth = currentDate.getMonth();\r\n      const currentDay = currentDate.getDate();\r\n      const firstDayOfMonth = new Date(year, month, 1).getDay();\r\n      const allDaysInMonth = [];\r\n      const allDaysLeftInMonth = [];\r\n      const allWeeksInMonth = [];\r\n      const allWeeksLeftInMonth = [];\r\n    \r\n      //days\r\n      for (let i = 1; i <= daysInMonth; i++) \r\n      {\r\n        const date = new Date(year, month, i);\r\n        const dayOfWeek = DAYS_OF_WEEK[date.getDay()];\r\n        const day = \r\n        {\r\n          day: dayOfWeek,\r\n          date: date\r\n        };\r\n\r\n        allDaysInMonth.push(day)\r\n        if (date > currentDate) \r\n          allDaysLeftInMonth.push(day);\r\n        else\r\n          allDaysLeftInMonth.push(false)\r\n      }\r\n    \r\n      let currentWeek = [];\r\n      let currentWeekLeft = [];\r\n\r\n      //weeks\r\n      for (let i = 1; i <= daysInMonth; i++) \r\n      {\r\n        const date = new Date(year, month, i);\r\n        const dayOfWeek = date.getDay();\r\n        if (dayOfWeek === 1) \r\n        {\r\n          allWeeksInMonth.push(currentWeek);\r\n          allWeeksLeftInMonth.push(currentWeekLeft);\r\n          currentWeek = [];\r\n          currentWeekLeft = [];\r\n        }\r\n        const day = \r\n        {\r\n          day: DAYS_OF_WEEK[dayOfWeek],\r\n          date: date\r\n        };\r\n        currentWeek.push(day);\r\n        if (date > currentDate) \r\n        {\r\n          currentWeekLeft.push(day);\r\n        }\r\n      }\r\n\r\n      if (currentWeek.length > 0) \r\n      {\r\n        allWeeksInMonth.push(currentWeek);\r\n        allWeeksLeftInMonth.push(currentWeek);\r\n      }\r\n      return {\r\n        allDaysInMonth: allDaysInMonth,\r\n        allDaysLeftInMonth: allDaysLeftInMonth,\r\n        allWeeksInMonth: allWeeksInMonth.filter(subarray => subarray.length > 0),\r\n        allWeeksLeftInMonth: allWeeksLeftInMonth\r\n      };\r\n    }\r\n    const {allDaysInMonth, allDaysLeftInMonth, allWeeksInMonth, allWeeksLeftInMonth} = getDaysAndWeeksInMonth(date);\r\n    return (\r\n        <div className={`w-full h-full`}>\r\n          {/* if padding will ever change remember to change padding in animated.div in MonthCarosuel to see the overflow x */}\r\n          <h3 className=\"flex justify-center items-center p-2 border-b-2 border-black font-semibold\">\r\n            {date}\r\n          </h3>\r\n          <Week \r\n            allDaysInMonth={allDaysInMonth} \r\n            allDaysLeftInMonth={allDaysLeftInMonth} \r\n            allWeeksInMonth={allWeeksInMonth} \r\n            allWeeksLeftInMonth={allWeeksLeftInMonth} \r\n            calendar={calendar}\r\n            date={date}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}","import {useMemo, useState } from \"react\";\r\nimport {useSprings, animated } from \"react-spring\";\r\n\r\nimport Month from \"./Month\";\r\n\r\nexport default function MonthCarosuel({calendar, displayedMonth, monthsCountForMonthCarousel}) \r\n{\r\n\r\n    const {date} = calendar;\r\n\r\n    const renderMonths = useMemo(()=>\r\n    {\r\n      return date.map((month, index) => <Month calendar={calendar} date={date[index]}/>)\r\n    }, [])\r\n\r\n    const [months, setMonths] = useState(renderMonths);\r\n\r\n    const monthCarousel = useSprings(\r\n        monthsCountForMonthCarousel,\r\n        date.map((month, index) => ({\r\n          transform: `translateX(${(index - displayedMonth) * 100}%)`,\r\n          position: \"absolute\",\r\n          width: \"full\",\r\n          height: \"full\",\r\n          top: 0,\r\n          left: 0,\r\n          zIndex: index === displayedMonth ? 1 : 0,\r\n        }))\r\n      );\r\n    return (\r\n        <div className=\"relative w-full h-full\">\r\n            {monthCarousel.map((props, index) => (\r\n              //pb for overflow x visibility\r\n              <animated.div key={index} className=\"absolute w-full h-full pb-[72px]\" style={{ ...props }}>\r\n                {months ? months[index] : null}\r\n              </animated.div>\r\n            ))}\r\n    </div>\r\n    )\r\n}","import { useState , useMemo, useEffect} from \"react\";\r\nimport {motion as m} from 'framer-motion';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport useCalendars from '../../hooks/useCalendars';\r\nimport useSlots from \"../../hooks/useSlots\";\r\n\r\nimport Menu from '../../components/menu/Menu'\r\nimport Confirm from '../../components/ui/Confirm';\r\nimport MonthNavbar from \"./MonthNavbar\";\r\nimport MonthCarosuel from \"./MonthCarosuel\";\r\nimport LoadingPage from '../Loading/LoadingPage';\r\nimport Message from \"../../components/ui/Message\";\r\n\r\nexport default function CalendarPage({})\r\n{\r\n\r\nconst {calendars, navigate, confirm, isFetching, message} = useCalendars();\r\nconst {calendarName} = useParams();\r\n//all nasty code below is written in case of refresh page while rendering calendar page\r\n//code will check if data is still fetching and wait for it till the end\r\n\r\nconst confirmCalendar = useMemo(()=>\r\n{\r\n  const parseStringToUrl = string => string.replaceAll(' ', '_').normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n  for (let i = 0; i < calendars.length; i++) \r\n  {\r\n    const thisCalendar = calendars[i];\r\n    const thisCalendarName = parseStringToUrl(thisCalendar.name);\r\n\r\n    if (calendarName === thisCalendarName)\r\n    { \r\n      return thisCalendar;\r\n    }\r\n  }\r\n  return false;\r\n}, [isFetching])\r\n\r\nconst [calendar, setCalendar] = useState(confirmCalendar);\r\n\r\nuseEffect(()=>\r\n{ \r\n  setTimeout(() => {\r\n\r\n    if (!confirmCalendar && !isFetching)\r\n      navigate('/brak_strony');\r\n\r\n      setCalendar(confirmCalendar);\r\n  }, 1000);\r\n  \r\n}, [isFetching])\r\n\r\nconst [displayedMonth, setDisplayedMonth] = useState(0); \r\nconst {slotsArray ,removeAllSlots} = useSlots();\r\nuseEffect(()=>\r\n{\r\n    return () =>\r\n    {\r\n      if (slotsArray.length !== 0)\r\n        removeAllSlots();\r\n    }\r\n}, [])\r\n\r\nif (!calendar)\r\n  return <LoadingPage/>\r\n\r\nconst {name, date} = calendar;\r\n\r\nconst user = {name: 'Bartosz Jakubowski', rights: 'user'};\r\n\r\n\r\n\r\n  const variantsForCalendarPage = \r\n  {\r\n        hidden: { opacity: 0, x: -200, y: 0 },\r\n        enter: { opacity: 1, x: 0, y: 0 },\r\n        // exit: { opacity: 0, x: -200, y: 0 },\r\n        exit: { opacity: 0 },\r\n  }\r\n \r\n  const monthsCountForMonthCarousel = date.length;\r\n    return(\r\n      <>\r\n        <m.div \r\n          className=\" absolute inset-0 flex items-center flex-col bg-red-100\" \r\n          variants={variantsForCalendarPage} initial='hidden' animate='enter' transition={{type: 'linear'}} exit='exit'>\r\n          <Confirm message={confirm.message} submit={confirm.submit} handleSubmit={confirm.handleSubmit}/>\r\n          <Message message={message} theme='bg-yellow-100'/>\r\n          <Menu calendarName={name} theme='bg-red-300'/>\r\n            <div className={`mt-4 w-[95%] h-[90%] md:mt-6 md:max-w-[90%] md:[90%] bg-red-300 md:mx-auto overflow-x-hidden rounded-sm text-xs overflow-hidden border-2 border-black`}>\r\n              <MonthNavbar displayedMonth={displayedMonth} setDisplayedMonth={setDisplayedMonth} monthsCountForMonthCarousel={monthsCountForMonthCarousel}/>      \r\n              <MonthCarosuel calendar={calendar} monthsCountForMonthCarousel={monthsCountForMonthCarousel} displayedMonth={displayedMonth}/>\r\n            </div>\r\n        </m.div>\r\n        </>\r\n      );\r\n}\r\n\r\n\r\n"],"names":["useContext","SlotContext","MonthNavbar","_ref","displayedMonth","setDisplayedMonth","monthsCountForMonthCarousel","_jsxs","className","children","_jsx","classNames","onClick","disabled","DayColumnHeader","dayDate","day","slots","isBlank","concat","map","slot","index","name","DaySlot","_thisSlot","_useSlots","useSlots","updateSlotsArray","updateSlot","emitMessage","_useState","useState","_useState2","_slicedToArray","thisSlot","setThisSlot","user","useAuthentication","setMessage","useCalendars","useMemo","handleSign","setConfirm","sign","handleSignClick","confirmed","newSlot","_objectSpread","handleUnsignClick","transitionStyles","entering","opacity","transform","entered","exiting","exited","transitions","useTransition","from","display","enter","leave","config","duration","event","preventDefault","message","toLowerCase","time","submit","handleSubmit","style","item","animated","DayColumn","_dayDate","isActive","timeArr","date","weekIndex","calendar","_id","_objectWithoutProperties","_excluded","records","handleRecords","calendarID","removeAllSlots","useEffect","data","_day","getDate","toString","padStart","_month","getMonth","_year","getFullYear","convertDate","daySlots","_Fragment","spaces","i","space","key","slotName","slotIndex","push","order","Time","Week","allDaysInMonth","allDaysLeftInMonth","allWeeksInMonth","allWeeksLeftInMonth","DAYS_OF_WEEK","timeStart","timeEnd","timeBetween","times","currentTime","_currentTime$split","split","_currentTime$split2","hours","minutes","nextMinutes","parseInt","nextHours","Math","floor","nextMinutesRemainder","generateTimes","timeFrom","timeTo","timeSpace","weekClassName","week","length","dayIndex","_allWeeksLeftInMonth$","_allWeeksLeftInMonth$2","doesDayExist","dayInWeek","toUpperCase","Month","_date$split","Date","_date$split2","MONTHS","_getDaysAndWeeksInMon","dateStr","_dateStr$split","_dateStr$split2","monthStr","yearStr","month","indexOf","year","daysInMonth","currentDate","getDay","currentWeek","currentWeekLeft","dayOfWeek","filter","subarray","getDaysAndWeeksInMonth","MonthCarosuel","renderMonths","months","monthCarousel","useSprings","position","width","height","top","left","zIndex","props","CalendarPage","_objectDestructuringEmpty","_useCalendars","calendars","navigate","confirm","isFetching","calendarName","useParams","confirmCalendar","thisCalendar","thisCalendarName","replaceAll","normalize","replace","setCalendar","setTimeout","_useState3","_useState4","slotsArray","LoadingPage","m","variants","hidden","x","y","exit","initial","animate","transition","type","Confirm","Message","theme","Menu"],"sourceRoot":""}